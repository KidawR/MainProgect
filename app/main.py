from crud_postgres import *  # PostgreSQL —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞–∫–∞–∑–æ–≤, –º–µ–Ω—é, —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ —Ç.–¥.
from crud_mongo import *     # MongoDB —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤ –∏ –ª–æ–≥–æ–≤

# ====== –î–µ–π—Å—Ç–≤–∏—è –∫–ª–∏–µ–Ω—Ç–∞ ======
def customer_actions():
    print("=== Customer Actions ===")
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
    print("\nüë§ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞...")
    cust_id = add_customer("–ü—ë—Ç—Ä –ü–µ—Ç—Ä–æ–≤", "89991234568", "petr@example.com")
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∫–ª–∏–µ–Ω—Ç (id={cust_id})")

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
    update_customer(customer_id=cust_id, phone="89997654321", email="petr_new@example.com")
    print("\n–û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã:")
    for c in get_customers():
        print(f"{c['customer_id']}: {c['name']} - {c['phone']} - {c['email']}")

    # –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
    delete_customer(customer_id=cust_id)
    print("\n–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞:")
    for c in get_customers():
        print(f"{c['customer_id']}: {c['name']} - {c['phone']} - {c['email']}")
    # –ü—Ä–æ—Å–º–æ—Ç—Ä –º–µ–Ω—é
    print("\nüìã –ú–µ–Ω—é:")
    for item in get_menu_items():
        print(f"- {item['name']} ({item['price']}‚ÇΩ) ‚Äî {item['description']}")

    # –ü—Ä–æ—Å–º–æ—Ç—Ä —Ñ–∏–ª–∏–∞–ª–æ–≤
    print("\nüè† –§–∏–ª–∏–∞–ª—ã:")
    for branch in get_branches():
        print(f"- {branch['name']} ({branch['city']}) ‚Äî {branch['address']}")

    print("\nüõí –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞...")
    order_id = create_order(customer_id=1, branch_id=1, employee_id=1, total_amount=0)

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –≤ –∑–∞–∫–∞–∑
    add_order_item(order_id=order_id, item_id=1, quantity=2)
    add_order_item(order_id=order_id, item_id=2, quantity=1)
    update_order_total(order_id)

    # –ü–æ–ª—É—á–∞–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –∑–∞–∫–∞–∑ —Å –µ–≥–æ –ø–æ–∑–∏—Ü–∏—è–º–∏
    print("‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω:", get_order(order_id))

    # –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞
    print("\nüì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã:")
    for order in get_orders_by_customer(customer_id=1):
        print(order)

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞ —á–µ—Ä–µ–∑ MongoDB
    print("\n‚≠ê –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞...")
    add_review(customer_id=1, branch_id=1, rating=5, comment="–û—á–µ–Ω—å –≤–∫—É—Å–Ω–æ!", sentiment=5)
    print("–û—Ç–∑—ã–≤—ã –æ —Ñ–∏–ª–∏–∞–ª–µ:", get_reviews(branch_id=1))

# ====== –î–µ–π—Å—Ç–≤–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ======
def employee_actions():
    print("\n=== Employee Actions ===")

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤
    customers = get_customers()
    print("\nüìã –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤:")
    for c in customers:
        print(f"{c['customer_id']}: {c['name']} - {c['phone']} - {c['email']}")

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
    update_order_status(order_id=7, status="completed")
    print("üì¶ –ó–∞–∫–∞–∑ –æ–±–Ω–æ–≤–ª—ë–Ω:", get_order(7))

    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø–æ—Å—Ç–∞–≤–∫—É
    print("\nüì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø–æ—Å—Ç–∞–≤–∫—É...")
    supply_id = create_supply_order(supplier_id=1, branch_id=1)
    add_item_to_supply(supply_order_id=supply_id, item_id=1, quantity=10)
    add_item_to_supply(supply_order_id=supply_id, item_id=2, quantity=5)
    print("–ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞:", get_supply_order(supply_id))

    # –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö –ø–æ—Å—Ç–∞–≤–æ–∫
    print("\nüöö –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ—Å—Ç–∞–≤–∫–∏:")
    for s in get_supply_orders():
        print(s)

    # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–º
    print("\nüè≠ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞...")
    create_inventory(branch_id=1, item_name="–ú–æ–ª–æ–∫–æ", quantity=20, unit="–ª")
    update_inventory(branch_id=1, item_name="–ú–æ–ª–æ–∫–æ", quantity_delta=-5)
    print("–°–∫–ª–∞–¥:", get_inventory(branch_id=1))

# ====== –î–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ======
def admin_actions():
    print("\n=== Admin Actions ===")

    # === Admin Actions ===
    print("\nüë§ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞...")
    emp_id = add_employee("–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤", "–ë–∞—Ä–∏—Å—Ç–∞", "2025-10-23", 1200, "ivan@example.com")
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ (id={emp_id})")

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    employees = get_employees()
    print("\nüìã –°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:")
    for e in employees:
        print(f"{e['employee_id']}: {e['name']} - {e['position']} - {e['email']}")

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    update_employee(employee_id=emp_id, salary=35000, position="–°—Ç–∞—Ä—à–∏–π –±–∞—Ä–∏—Å—Ç–∞")
    print("–û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏:", get_employees())

    # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    remove_employee(employee_id=emp_id)
    print("–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è:", get_employees())

    # –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    delete_order(order_id=1)
    print("–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞:", get_orders())

    #####################################################################
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π —á–µ—Ä–µ–∑ MongoDB
    log_action(user_id=1, action="delete_order", details={"order_id": 1})
    ######################################################################

def print_all_relationships():
    # ===================================================
    # 1Ô∏è‚É£ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Üî –ü—É–Ω–∫—Ç—ã –º–µ–Ω—é
    # ===================================================
    print("\n=== –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Üî –ü—É–Ω–∫—Ç—ã –º–µ–Ω—é ===")
    for cat in get_menu_categories():
        print(f"\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {cat['name']} ({cat.get('description','')})")
        items = get_items_by_category(cat['category_id'])
        if items:
            for item in items:
                print(f" - {item['name']} ({item['price']}‚ÇΩ): {item.get('description','')}")
        else:
            print(" - –ü—É–Ω–∫—Ç—ã –º–µ–Ω—é –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")

    # ===================================================
    # 2Ô∏è‚É£ –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏ ‚Üî –¢–æ–≤–∞—Ä—ã
    # ===================================================
    print("\n=== –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏ ‚Üî –¢–æ–≤–∞—Ä—ã ===")
    for sup in get_suppliers():
        print(f"\n–ü–æ—Å—Ç–∞–≤—â–∏–∫: {sup['name']} (—Ç–µ–ª: {sup.get('phone','')}, email: {sup.get('email','')})")
        items = get_items_by_supplier(sup['supplier_id'])
        if items:
            for item in items:
                print(f" - {item['name']} ({item['price']}‚ÇΩ), —Ü–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤–∫–∏: {item['supply_price']}‚ÇΩ")
        else:
            print(" - –¢–æ–≤–∞—Ä—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")

    # ===================================================
    # 3Ô∏è‚É£ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ ‚Üî –§–∏–ª–∏–∞–ª—ã
    # ===================================================
    print("\n=== –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ ‚Üî –§–∏–ª–∏–∞–ª—ã ===")
    for emp in get_employees():
        print(f"\n–°–æ—Ç—Ä—É–¥–Ω–∏–∫: {emp['name']} ({emp['position']}), email: {emp.get('email','')}")
        branches = get_branches_by_employee(emp['employee_id'])
        if branches:
            for b in branches:
                print(f" - –§–∏–ª–∏–∞–ª: {b['name']} ({b['city']}), –∞–¥—Ä–µ—Å: {b['address']}")
        else:
            print(" - –§–∏–ª–∏–∞–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")

    # ===================================================
    # 4Ô∏è‚É£ –ü—É–Ω–∫—Ç—ã –º–µ–Ω—é ‚Üî –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏
    # ===================================================
    print("\n=== –ü—É–Ω–∫—Ç—ã –º–µ–Ω—é ‚Üî –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏ ===")
    for item in get_menu_items():
        print(f"\n–ü—É–Ω–∫—Ç –º–µ–Ω—é: {item['name']} ({item['price']}‚ÇΩ)")
        suppliers = get_suppliers_by_item(item['item_id'])
        if suppliers:
            for s in suppliers:
                print(f" - –ü–æ—Å—Ç–∞–≤—â–∏–∫: {s['name']} (—Ç–µ–ª: {s.get('phone','')}, email: {s.get('email','')})")
        else:
            print(" - –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
# ====== –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ======
if __name__ == "__main__":
    customer_actions()
    employee_actions()
    admin_actions()
    print_all_relationships()

## docker system prune -a --volumes
